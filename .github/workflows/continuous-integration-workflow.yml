name: Continuous Integration
on: 
   push:                    # Will make the workflow run every time you push to any branch
    paths-ignore:
    - '**/README.md'
   pull_request:
    paths-ignore:
    - '**/README.md'

jobs:
  job-one:
    name: Build and test
    runs-on: ubuntu-latest     # Sets the build environment a machine with the latest Ubuntu installed
    steps:
    - uses: actions/checkout@v2  # Adds a step to checkout the repository code
    
    - name: Build Docker
      run: docker build --tag todo-app:devtest --target devtestpy .

    - name: Run Docker
      run: docker run -e FLASK_APP=${{ secrets.FLASK_APP_X}} -e FLASK_ENV=${{ secrets.FLASK_ENV_X}} -e SECRET_KEY=${{ secrets.SECRET_KEY_X }} todo-app:devtest

  job-two:
    name: image build & push 
    runs-on: ubuntu-latest
    needs: job-one
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          target: prodpy
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest
  job-three:
    name: Azure deploy 
    runs-on: ubuntu-latest
    needs: [job-one, job-two]
    env: 
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID}}
        TF_VAR_API_KEY: '${{ secrets.API_KEY }}'
        TF_VAR_API_TOKEN: '${{ secrets.API_TOKEN }}'
        TF_VAR_REDIRECT_URI: '${{ secrets.REDIRECT_URI }}'
        TF_VAR_USERNAME: '${{ secrets.USERNAME }}'
        TF_VAR_DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
        TF_VAR_DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
        TF_VAR_GITHUB_TERRA_CLIENT_ID: '${{ secrets.GITHUB_TERRA_CLIENT_ID }}'
        TF_VAR_GITHUB__TERRA_CLIENT_SECRET: '${{ secrets.GITHUB_TERRA_CLIENT_SECRET }}'
        TF_VAR_SECRET_KEY: '${{ secrets.SECRET_KEY_X }}'
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v3
    - name: 'Terraform init'
      run: terraform init
    - name: 'Terraform Apply'
      run: terraform apply -auto-approve
    - name: 'Run Azure CLI commands'
      run: curl -dH -X POST --fail "$(terraform output -raw webhook)"

